@using WebAppTemplate.Frontend.Models
@using WebAppTemplate.Frontend.UI.Layouts

@inject NavigationManager Navigation

@{
    var url = new Uri(Navigation.Uri);
}

<div class="fixed inset-y-0 left-0 w-64 max-lg:hidden">
    <nav class="flex h-full min-h-0 flex-col">
        <div class="flex flex-col border-b p-4 border-white/5">
         <span class="relative">
         <button type="button"
                 class="flex w-full cursor-default items-center gap-3 rounded-lg px-2 py-2.5 text-left text-base/6 font-medium text-gray-100">
             <span
                 class="inline-grid shrink-0 align-middle">
             <img class="h-8 rounded-full"
                  src="https://dthezntil550i.cloudfront.net/tq/latest/tq2102191641110570016516452/1280_960/3ddca707-bff9-45a1-a626-7c6286acd8a7.png"
                  alt=""/>
         </span>
         <span class="truncate">WebAppTemplate</span>
         </button>
         </span>
        </div>
        <div class="flex flex-1 flex-col overflow-y-auto p-4 mt-8">
            <div class="flex flex-col gap-1.5">
                @foreach (var item in Items)
                {
                    foreach (var sidebarItem in item.Value)
                    {
                        var isMatch = sidebarItem.RequiresExactMatch
                            ? url.LocalPath == sidebarItem.Path
                            : url.LocalPath.StartsWith(sidebarItem.Path);

                        @if (isMatch)
                        {
                            <div class="relative">
                                <span class="absolute inset-y-2 -left-4 w-0.5 rounded-full bg-white"
                                      style="opacity: 1;">
                                </span>
                                <a class="flex w-full items-center gap-3 rounded-lg px-3 py-2 text-left text-base/6 font-normal bg-white/5 sm:py-2 sm:text-sm/5 text-white"
                                   href="@sidebarItem.Path">
                                    <i class="@sidebarItem.Icon text-lg"></i>
                                    <span class="truncate">
                                        @sidebarItem.Name
                                    </span>
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="relative">
                                <a class="flex w-full items-center gap-3 rounded-lg px-3 py-1.5 text-left text-base/6 font-normal sm:py-2 sm:text-sm/5 text-white hover:bg-white/5"
                                   href="@sidebarItem.Path">
                                    <i class="@sidebarItem.Icon text-lg"></i>
                                    <span class="truncate">
                                        @sidebarItem.Name
                                    </span>
                                </a>
                            </div>
                        }
                    }
                }
            </div>
        </div>
        <div class="flex flex-col border-t p-4 max-lg:hidden border-white/5 mt-2.5">
            <div
                class="flex w-full cursor-default items-center px-2 py-2.5 gap-6 rounded-lg text-left text-base/6 font-medium sm:py-2 sm:text-sm/5 text-white">
                <div class="flex min-w-0 items-center gap-3">
                    <span class="inline-grid shrink-0 align-middle">
                        <img class="h-8 rounded-full"
                             src="https://dthezntil550i.cloudfront.net/tq/latest/tq2102191641110570016516452/1280_960/3ddca707-bff9-45a1-a626-7c6286acd8a7.png"
                             alt=""/>
                    </span>
                    <span class="min-w-0">
                        <span class="block truncate text-sm/5 font-medium text-zinc-950 dark:text-white">Chiara</span>
                        <span class="block truncate text-xs/5 font-normal text-zinc-500 dark:text-zinc-400">
                            hey@chiarabm.dev
                        </span>
                    </span>
                </div>
                <a href="#" class="flex items-center">
                    <i class="icon-log-out text-lg"></i>
                </a>
            </div>
        </div>
    </nav>
</div>
<header class="flex items-center px-4 lg:hidden">
    <div class="py-2.5">
        <span class="relative">
            <button aria-label="Open navigation"
                    class="relative flex min-w-0 cursor-default items-center gap-3 rounded-lg p-2 text-left text-base/6 font-medium text-zinc-950 data-active:bg-zinc-950/5 data-hover:bg-zinc-950/5 *:data-[slot=avatar]:-m-0.5 *:data-[slot=avatar]:size-7 *:data-[slot=avatar]:[--avatar-radius:var(--radius-md)] *:data-[slot=icon]:size-6 *:data-[slot=icon]:shrink-0 *:data-[slot=icon]:fill-zinc-500 *:not-nth-2:last:data-[slot=icon]:ml-auto *:not-nth-2:last:data-[slot=icon]:size-5 data-active:*:data-[slot=icon]:fill-zinc-950 data-hover:*:data-[slot=icon]:fill-zinc-950 sm:text-sm/5 sm:*:data-[slot=avatar]:size-6 sm:*:data-[slot=icon]:size-5 sm:*:not-nth-2:last:data-[slot=icon]:size-4 dark:text-white dark:data-active:bg-white/5 dark:data-hover:bg-white/5 dark:*:data-[slot=icon]:fill-zinc-400 dark:data-active:*:data-[slot=icon]:fill-white dark:data-hover:*:data-[slot=icon]:fill-white"
                    type="button" data-headlessui-state="">
                <span
                    class="absolute top-1/2 left-1/2 size-[max(100%,2.75rem)] -translate-x-1/2 -translate-y-1/2 [@@media(pointer:fine)]:hidden"
                    aria-hidden="true"></span>
                <svg data-slot="icon" viewBox="0 0 20 20" aria-hidden="true">
                    <path
                        d="M2 6.75C2 6.33579 2.33579 6 2.75 6H17.25C17.6642 6 18 6.33579 18 6.75C18 7.16421 17.6642 7.5 17.25 7.5H2.75C2.33579 7.5 2 7.16421 2 6.75ZM2 13.25C2 12.8358 2.33579 12.5 2.75 12.5H17.25C17.6642 12.5 18 12.8358 18 13.25C18 13.6642 17.6642 14 17.25 14H2.75C2.33579 14 2 13.6642 2 13.25Z"></path>
                </svg>
            </button>
        </span>
    </div>
    <div class="min-w-0 flex-1">
        <nav class="flex flex-1 items-center gap-4 py-2.5">
            <div aria-hidden="true" class="-ml-4 flex-1"></div>
            <div class="flex items-center gap-3">
                <span class="relative"><button id="headlessui-menu-button-:R1ujja:" type="button" aria-haspopup="menu"
                                               aria-expanded="false"
                                               data-headlessui-state=""
                                               class="relative flex min-w-0 cursor-default items-center gap-3 rounded-lg p-2 text-left text-base/6 font-medium text-zinc-950 data-active:bg-zinc-950/5 data-hover:bg-zinc-950/5 *:data-[slot=avatar]:-m-0.5 *:data-[slot=avatar]:size-7 *:data-[slot=avatar]:[--avatar-radius:var(--radius-md)] *:data-[slot=icon]:size-6 *:data-[slot=icon]:shrink-0 *:data-[slot=icon]:fill-zinc-500 *:not-nth-2:last:data-[slot=icon]:ml-auto *:not-nth-2:last:data-[slot=icon]:size-5 data-active:*:data-[slot=icon]:fill-zinc-950 data-hover:*:data-[slot=icon]:fill-zinc-950 sm:text-sm/5 sm:*:data-[slot=avatar]:size-6 sm:*:data-[slot=icon]:size-5 sm:*:not-nth-2:last:data-[slot=icon]:size-4 dark:text-white dark:data-active:bg-white/5 dark:data-hover:bg-white/5 dark:*:data-[slot=icon]:fill-zinc-400 dark:data-active:*:data-[slot=icon]:fill-white dark:data-hover:*:data-[slot=icon]:fill-white">
                    <span
                        class="absolute top-1/2 left-1/2 size-[max(100%,2.75rem)] -translate-x-1/2 -translate-y-1/2 [@@media(pointer:fine)]:hidden"
                        aria-hidden="true"></span><span data-slot="avatar"
                                                        class="inline-grid shrink-0 rounded-(--avatar-radius) align-middle outline -outline-offset-1 outline-black/10 [--avatar-radius:20%] *:col-start-1 *:row-start-1 *:rounded-(--avatar-radius) dark:outline-white/10"><img
                                class="size-full" src="/users/erica.jpg" alt=""/></span></button></span>
            </div>
        </nav>
    </div>
</header>

@code
{
    [Parameter] public XMainLayout Layout { get; set; }

    private Dictionary<string, SidebarItem[]> Items = new();

    protected override void OnInitialized()
    {
        SidebarItem[] items =
        [
            new()
            {
                Name = "Dashboard",
                Path = "/",
                RequiresExactMatch = true,
                Icon = "icon-layout-dashboard",
                Priority = 0
            },
            new()
            {
                Name = "Data",
                Path = "/data",
                RequiresExactMatch = false,
                Icon = "icon-text-search",
                Priority = 1
            }
        ];

        Items = items
            .GroupBy(x => x.Group ?? "")
            .OrderByDescending(x => string.IsNullOrEmpty(x.Key))
            .ToDictionary(x => x.Key, x => x.OrderBy(y => y.Priority).ToArray());
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return Task.CompletedTask;

        Layout.OnStateChanged += () => InvokeAsync(StateHasChanged);

        Navigation.LocationChanged += async (_, _) =>
        {
            if (!Layout.ShowMobileNavigation)
                return;

            await Layout.ToggleMobileNavigation();
        };

        return Task.CompletedTask;
    }
}
